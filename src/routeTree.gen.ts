/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConsultantImport } from './routes/consultant'
import { Route as AppointmentImport } from './routes/appointment'
import { Route as IndexImport } from './routes/index'
import { Route as AuthVerificationImport } from './routes/auth/verification'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as AuthResetPasswordImport } from './routes/auth/reset-password'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'

// Create/Update Routes

const ConsultantRoute = ConsultantImport.update({
  id: '/consultant',
  path: '/consultant',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentRoute = AppointmentImport.update({
  id: '/appointment',
  path: '/appointment',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerificationRoute = AuthVerificationImport.update({
  id: '/auth/verification',
  path: '/auth/verification',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/appointment': {
      id: '/appointment'
      path: '/appointment'
      fullPath: '/appointment'
      preLoaderRoute: typeof AppointmentImport
      parentRoute: typeof rootRoute
    }
    '/consultant': {
      id: '/consultant'
      path: '/consultant'
      fullPath: '/consultant'
      preLoaderRoute: typeof ConsultantImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/verification': {
      id: '/auth/verification'
      path: '/auth/verification'
      fullPath: '/auth/verification'
      preLoaderRoute: typeof AuthVerificationImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/appointment': typeof AppointmentRoute
  '/consultant': typeof ConsultantRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verification': typeof AuthVerificationRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/appointment': typeof AppointmentRoute
  '/consultant': typeof ConsultantRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verification': typeof AuthVerificationRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/appointment': typeof AppointmentRoute
  '/consultant': typeof ConsultantRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verification': typeof AuthVerificationRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/appointment'
    | '/consultant'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verification'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/appointment'
    | '/consultant'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verification'
  id:
    | '__root__'
    | '/'
    | '/appointment'
    | '/consultant'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verification'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppointmentRoute: typeof AppointmentRoute
  ConsultantRoute: typeof ConsultantRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerificationRoute: typeof AuthVerificationRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppointmentRoute: AppointmentRoute,
  ConsultantRoute: ConsultantRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerificationRoute: AuthVerificationRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/appointment",
        "/consultant",
        "/auth/forgot-password",
        "/auth/reset-password",
        "/auth/signin",
        "/auth/signup",
        "/auth/verification"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/appointment": {
      "filePath": "appointment.tsx"
    },
    "/consultant": {
      "filePath": "consultant.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/verification": {
      "filePath": "auth/verification.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
